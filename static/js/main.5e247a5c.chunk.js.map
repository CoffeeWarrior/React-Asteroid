{"version":3,"sources":["svgs/ship.svg","svgs/asteroid.svg","container/Score/Score.js","presentational/loseScreen.js","helpers/ship-related/adjustKeyMap.js","helpers/ship-related/updateShipAngle.js","helpers/ship-related/drawShip.js","helpers/asteroid-related/asteroidGenerator.js","helpers/asteroid-related/drawAsteroid.js","container/Canvas/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Score","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","timerID","setInterval","tick","setState","Date","componentDidMount","componentWillUnmount","clearInterval","state","elapsed","lost","react_default","a","createElement","style","zIndex","position","top","fontFamily","left","color","Math","floor","toFixed","Component","LoseScreen","onClick","backgroundColor","transform","width","height","textAlign","borderRadius","opacity","adjustKeyMap","event","keyMapInput","type","keyMap","objectSpread","key","w","s","d","updateShipAngle","angle","drawShip","ctx","shipPosition","shipAngle","shipIMG","save","translate","x","y","rotate","PI","drawImage","restore","asteroidGenerator","cHeight","cWidth","asteroidIMG","asteroid","direction","dx","dy","incrementPosition","insideAsteroid","sx","sy","hitboxPositionX","hitboxPositionY","sqrt","pow","negateX","negateY","random","atan","abs","round","speed","ceil","cos","sin","drawAsteroid","asteroidPosition","Canvas","moveShip","shipLoaded","prevState","currentPosition","refs","canvas","getContext","shipHitBox","updateAsteroid","asteroidLoaded","asteroidArray","toConsumableArray","i","length","intervalRedraw","decrementAsteroidArray","updatedAsteroidArray","filter","drawCanvas","clearRect","incrementAsteroidArray","prevAsteroidArray","push","loadAsteroid","img","Image","onload","src","loadShip","ship","restart","window","innerHeight","innerWidth","_this2","addEventListener","e","_this3","loseScreen","presentational_loseScreen","container_Score_Score","ref","boxSizing","padding","App","className","container_Canvas_Canvas","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2NCkDzBC,cA/CX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQVQ,MAAQ,WACJ,IAAMC,EAAUC,YAAYT,EAAKU,KAAM,KACvCV,EAAKW,SAAS,CAACJ,MAAO,IAAIK,KAAMJ,QAASA,KAX3BR,EAclBa,kBAAoB,WAChBb,EAAKO,SAfSP,EAkBlBc,qBAAuB,WACnBC,cAAcf,EAAKgB,MAAMR,UAnBXR,EA6BlBU,KAAO,WACH,IAAMO,EAAU,IAAIL,KAASZ,EAAKgB,MAAMT,MACrCP,EAAKD,MAAMmB,OACVH,cAAcf,EAAKgB,MAAMR,SACzBR,EAAKW,SAAS,CAACH,QAAS,QAE5BR,EAAKW,SAAS,CAACM,QAASA,KAjCxBjB,EAAKgB,MAAQ,CACTC,QAAS,EACTV,MAAO,KACPC,QAAS,MALCR,oFAuBTG,KAAKa,MAAMR,SAAYL,KAAKJ,MAAMmB,MACnCf,KAAKI,yCAgBT,OACIY,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACC,OAAQ,IAAKC,SAAU,WAAYC,IAAK,OAAQC,WAAY,4BAA6BC,KAAM,SAAUC,MAAO,UAA5H,WAAoL,IAArCC,KAAKC,MAAM3B,KAAKa,MAAMC,QAAQ,MAAYc,QAAQ,WA1CzLC,aCgBLC,EAhBI,SAAClC,GAChB,OACIoB,EAAAC,EAAAC,cAAA,OAAKa,QAASnC,EAAMmC,SAChBf,EAAAC,EAAAC,cAAA,OAAKC,MACD,CAACa,gBAAiB,QAASP,MAAO,QAASJ,SAAU,WACrDC,IAAI,MAAOE,KAAK,MAAOS,UAAW,wBAClCC,MAAM,QAASC,OAAO,OAASf,OAAQ,KAAMgB,UAAW,SACxDC,aAAc,MAAOd,WAAY,8BACjCP,EAAAC,EAAAC,cAAA,sBAAgBF,EAAAC,EAAAC,cAAA,6CAGpBF,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACe,MAAO,QAASC,OAAQ,QAASH,gBAAiB,QAASM,QAAS,KAAMjB,SAAU,WAAYC,IAAI,IAAKE,KAAK,0BCmCxHe,EA/CM,SAACC,EAAOC,GAC5B,GAAkB,YAAfD,EAAME,KAAmB,CAC3B,IAAMC,EAAM7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAO2C,GACnB,OAAOD,EAAMK,KACb,IAAK,IACJF,EAAOG,GAAI,EACX,MACD,IAAK,IACJH,EAAOI,GAAI,EACX,MAED,IAAK,IACJJ,EAAO1B,GAAI,EACX,MAED,IAAK,IACJ0B,EAAOK,GAAI,EAKZ,OAAOL,EAEF,GAAkB,UAAfH,EAAME,KAAiB,CAC/B,IAAMC,EAAM7C,OAAA8C,EAAA,EAAA9C,CAAA,GAAO2C,GACnB,OAAOD,EAAMK,KACb,IAAK,IACJF,EAAOG,GAAI,EACX,MAED,IAAK,IACJH,EAAOI,GAAI,EACX,MAED,IAAK,IACJJ,EAAO1B,GAAI,EACX,MAED,IAAK,IACJ0B,EAAOK,GAAI,EAKZ,OAAOL,ICCMM,EA5CS,SAACN,GACxB,IAAIO,EAAQ,EACZ,OAAGP,EAAOG,GACTI,GAAS,EACNP,EAAOK,IACTE,GAAS,IAEPP,EAAO1B,IACTiC,GAAS,KAEHA,GAELP,EAAO1B,GACTiC,GAAS,IACNP,EAAOI,IACTG,GAAS,IAEPP,EAAOG,IACTI,GAAS,IAEHA,GAELP,EAAOI,GACTG,GAAS,IACNP,EAAOK,IACTE,GAAS,IAEPP,EAAO1B,IACTiC,GAAS,IAEHA,GAELP,EAAOK,GACTE,GAAS,GACNP,EAAOG,IACTI,GAAS,IAEPP,EAAOI,IACTG,GAAS,IAEHA,QARR,GCRcC,EAxBE,SAACC,EAAKvC,GACtB,IAAMwC,EAAexC,EAAMwC,aACrBC,EAAYzC,EAAMyC,UAClBC,EAAU1C,EAAM0C,QACtBH,EAAII,OAGJJ,EAAIK,UAAUJ,EAAaK,EAAGL,EAAaM,GAG3CP,EAAIK,UAAU,GAAG,IAGjBL,EAAIQ,OAAON,EAAY5B,KAAKmC,GAAG,KAG/BT,EAAIU,UAAUP,GAAU,IAAK,IAI7BH,EAAIW,4BCmEUC,EAtFW,SAACX,EAAcY,EAASC,EAAQC,GAEzD,IAAMC,EAAW,CAChB/C,SAAU,CACTqC,EAAG,EACHC,EAAG,GAEJU,UAAW,CACVC,GAAI,EACJC,GAAI,GAELC,kBAAmB,WAElBJ,EAAS/C,SAASqC,GAAKU,EAASC,UAAUC,GAC1CF,EAAS/C,SAASsC,GAAKS,EAASC,UAAUE,IAE3CE,eAAgB,SAACC,EAAIC,GAOpB,IAAMC,EAAkBR,EAAS/C,SAASqC,EAAKU,EAASD,YAAYjC,MAAM,EACpE2C,EAAkBT,EAAS/C,SAASsC,EAAKS,EAASD,YAAYhC,OAAO,EAK3E,OAAO,IAHUT,KAAKoD,KAAKpD,KAAKqD,IAAIL,EAAME,EAAiB,GAAKlD,KAAKqD,IAAIJ,EAAKE,EAAiB,KAKhGV,YAAaA,EACba,SAAS,EACTC,SAAS,GAKV,OAFc,CAAC,MAAO,SAAU,OAAQ,SAE3BvD,KAAKC,MAAqB,EAAfD,KAAKwD,YAC7B,IAAK,MACJd,EAAS/C,SAASqC,EAAIhC,KAAKwD,SAAWhB,EACtCE,EAAS/C,SAASsC,GAAK,IACvB,MACD,IAAK,SACJS,EAAS/C,SAASqC,EAAIhC,KAAKwD,SAAWhB,EACtCE,EAAS/C,SAASsC,EAAIM,EACtB,MACD,IAAK,OACJG,EAAS/C,SAASqC,GAAK,IACvBU,EAAS/C,SAASsC,EAAIjC,KAAKwD,SAAWjB,EACtC,MACD,IAAK,QACJG,EAAS/C,SAASqC,EAAIQ,EACtBE,EAAS/C,SAASsC,EAAIjC,KAAKwD,SAAWjB,EACtC,MACD,QACC,OAAO,EAKR,IAAMf,EAAQxB,KAAKyD,KAAKzD,KAAK0D,IAAK/B,EAAaM,EAAIS,EAAS/C,SAASsC,GAAIjC,KAAK0D,IAAK/B,EAAaK,EAAIU,EAAS/C,SAASqC,IACjG,GAAdhC,KAAKwD,WAAgB,EAAGxD,KAAK2D,MAAM3D,KAAKwD,WAAW,IAGpDI,EAAQ5D,KAAK6D,KAAmB,GAAd7D,KAAKwD,UAAe,GAkB5C,OAhBAd,EAASY,QAAUZ,EAAS/C,SAASqC,EAAIL,EAAaK,EACtDU,EAASa,QAAUb,EAAS/C,SAASsC,EAAIN,EAAaM,EAGtDS,EAASC,UAAUC,GAAK5C,KAAK8D,IAAItC,GAASoC,EAC1ClB,EAASC,UAAUE,GAAK7C,KAAK+D,IAAIvC,GAASoC,EAGvClB,EAASY,UACXZ,EAASC,UAAUC,IAA8B,EAAzBF,EAASC,UAAUC,IAGzCF,EAASa,UACXb,EAASC,UAAUE,IAA8B,EAAzBH,EAASC,UAAUE,IAGrCH,GC7EOsB,EANM,SAACtC,EAAKgB,GAC1B,IAAMD,EAAcC,EAASD,YACvBwB,EAAmBvB,EAAS/C,SAClC+B,EAAIU,UAAUK,EAAawB,EAAiBjC,EAAGiC,EAAiBhC,ICuMlDiC,cAxLX,SAAAA,EAAYhG,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4F,IACd/F,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8F,GAAAzF,KAAAH,KAAMJ,KA+BViG,SAAW,WACP,GAAGhG,EAAKgB,MAAMiF,WAAW,CACrB,IAAIC,EAASjG,OAAA8C,EAAA,EAAA9C,CAAA,GAAOD,EAAKgB,OACrBmF,EAAelG,OAAA8C,EAAA,EAAA9C,CAAA,GAAOiG,EAAU1C,cAGjCxD,EAAKgB,MAAM8B,OAAOG,IACjBkD,EAAgBrC,GAAK,GAGtB9D,EAAKgB,MAAM8B,OAAOI,IACjBiD,EAAgBrC,GAAK,GAGtB9D,EAAKgB,MAAM8B,OAAO1B,IACjB+E,EAAgBtC,GAAK,GAGtB7D,EAAKgB,MAAM8B,OAAOK,IACjBgD,EAAgBtC,GAAK,GAEzB7D,EAAKW,SAAS,CAAC6C,aAAc2C,IAC7B7C,EAAStD,EAAKoG,KAAKC,OAAOC,WAAW,MAAOtG,EAAKgB,OAEjD,IAAMuF,EAAa,CAAC1C,EAAGsC,EAAgBtC,EAAK7D,EAAKgB,MAAM0C,QAAQrB,MAAM,EAAIyB,EAAGqC,EAAgBrC,EAAK9D,EAAKgB,MAAM0C,QAAQpB,OAAO,GAC3HtC,EAAKW,SAAS,CAAC4F,WAAYA,MAzDjBvG,EA+DlBwG,eAAiB,WAEb,GAAGxG,EAAKgB,MAAMyF,eAAe,CAGzB,IAFA,IAAMlD,EAAMvD,EAAKoG,KAAKC,OAAOC,WAAW,MAClCI,EAAazG,OAAA0G,EAAA,EAAA1G,CAAOD,EAAKgB,MAAM0F,eAC7BE,EAAI,EAAGA,EAAI5G,EAAKgB,MAAM0F,cAAcG,OAAQD,IAChDf,EAAatC,EAAKvD,EAAKgB,MAAM0F,cAAcE,IACxCF,EAAcE,GAAGhC,eAAe5E,EAAKgB,MAAMuF,WAAW1C,EAAG7D,EAAKgB,MAAMuF,WAAWzC,KAC9E9D,EAAKW,SAAS,CAACO,MAAM,IACrBH,cAAcf,EAAKgB,MAAM8F,iBAE7BJ,EAAcE,GAAGjC,oBAGrB3E,EAAKW,SAAS,CAAC+F,cAAeA,MA7EpB1G,EAoFlB+G,uBAAyB,WACrB,IACMC,EADa/G,OAAA0G,EAAA,EAAA1G,CAAOD,EAAKgB,MAAM0F,eACMO,OAAO,SAAA1C,GAE9C,OADoBA,EAAS/C,SAASqC,EAAI7D,EAAKoG,KAAKC,OAAOhE,OAASkC,EAAS/C,SAASqC,EAAI,IAG9F7D,EAAKW,SAAS,CAAC+F,cAAeM,KA1FhBhH,EA+FlBkH,WAAa,WACGlH,EAAKoG,KAAKC,OAAOC,WAAW,MAEpCa,UAAU,EAAG,EAAGnH,EAAKoG,KAAKC,OAAOhE,MAAOrC,EAAKoG,KAAKC,OAAO/D,QAE7DtC,EAAKgG,WACLhG,EAAKwG,kBArGSxG,EAyGlBoH,uBAAyB,WACrB,GAAGpH,EAAKgB,MAAMyF,eAAe,CACzB,IAAMlC,EAAWJ,EAAkBnE,EAAKgB,MAAMwC,aAAcxD,EAAKoG,KAAKC,OAAO/D,OAAQtC,EAAKoG,KAAKC,OAAOhE,MAAOrC,EAAKgB,MAAMsD,aAClH+C,EAAiBpH,OAAA0G,EAAA,EAAA1G,CAAOD,EAAKgB,MAAM0F,eACzCW,EAAkBC,KAAK/C,GACvBvE,EAAKW,SAAS,CAAC+F,cAAeW,MA9GpBrH,EAmHlBuH,aAAe,WACX,IAAIC,EAAM,IAAIC,MAAM,IAAI,KACxBD,EAAIE,OAAS,WACT1H,EAAKW,SAAS,CAAC8F,gBAAgB,EAAMnC,YAAakD,IAElD/G,YAAYT,EAAKoH,uBAAwB,MAE7CI,EAAIG,IAAMpD,KA1HIvE,EA6HlB4H,SAAW,WACP,IAAIJ,EAAM,IAAIC,MAAM,GAAG,IACvBD,EAAIE,OAAS,WACT1H,EAAKW,SAAS,CAAC+C,QAAS8D,EAAKvB,YAAY,KAE7CuB,EAAIG,IAAME,KAlII7H,EAqIlBO,MAAQ,WACJP,EAAKW,SAAS,CAACmH,SAAS,EAAO5G,MAAM,EAAOwF,cAAe,KAC3D,IAAML,EAASrG,EAAKoG,KAAKC,OACzBA,EAAO/D,OAASyF,OAAOC,YACvB3B,EAAOhE,MAAQ0F,OAAOE,WACtBjI,EAAKW,SAAS,CAAC6C,aAAc,CAACK,EAAG7D,EAAKoG,KAAKC,OAAOhE,MAAM,EAAGyB,EAAG9D,EAAKoG,KAAKC,OAAO/D,OAAO,KAEtF7B,YAAYT,EAAK+G,uBAAwB,KACzC,IAAMD,EAAiBrG,YAAYT,EAAKkH,WAAY,IACpDlH,EAAKW,SAAS,CAACmG,oBA5If9G,EAAKgB,MAAQ,CACTmB,gBAAiB,OACjBqB,aAAc,CACVK,EAAG,EACHC,EAAG,GAEPyC,WAAY,CAGR1C,EAAG,EACHC,EAAG,GAEPhB,OAAS,CACLG,GAAG,EACHC,GAAG,EACH9B,GAAG,EACH+B,GAAG,GAEPO,QAAU,KACVuC,YAAY,EACZxC,UAAW,EACXa,YAAa,KACbmC,gBAAgB,EAChBC,cAAe,GACfxF,MAAM,EACN4G,SAAS,GA3BC9H,mFAkJC,IAAAkI,EAAA/H,KAEfA,KAAKI,QACLJ,KAAKyH,WACLzH,KAAKoH,eACLQ,OAAOI,iBAAiB,UAAW,SAACC,GAChCF,EAAKvH,SAAS,CAACmC,OAAQJ,EAAa0F,EAAGF,EAAKlH,MAAM8B,SAAU,WACxDoF,EAAKvH,SAAS,CAAC8C,UAAWL,EAAgBnD,OAAA8C,EAAA,EAAA9C,CAAA,GAAIiI,EAAKlH,MAAM8B,eAGjEiF,OAAOI,iBAAiB,QAAS,SAACC,GAC9BF,EAAKvH,SAAS,CAACmC,OAAQJ,EAAa0F,EAAGF,EAAKlH,MAAM8B,SAAU,WACxDoF,EAAKvH,SAAS,CAAC8C,UAAWL,EAAgBnD,OAAA8C,EAAA,EAAA9C,CAAA,GAAIiI,EAAKlH,MAAM8B,4DAM9D3C,KAAKa,MAAM8G,SACV3H,KAAKI,yCAGL,IAAA8H,EAAAlI,KACAmI,EAAa,KAIjB,OAHGnI,KAAKa,MAAME,OACVoH,EAAcnH,EAAAC,EAAAC,cAACkH,EAAD,CAAarG,QAAS,kBAAMmG,EAAK1H,SAAS,CAACmH,SAAS,QAGlE3G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACmH,EAAD,CAAOtH,KAAMf,KAAKa,MAAME,OACxBC,EAAAC,EAAAC,cAAA,UAAQoH,IAAI,SAASnH,MAAO,CAACoH,UAAW,aAAcvG,gBAAiB,QAASwG,QAAS,MAAOnH,SAAU,cACzG8G,UAlLQtG,aCRN4G,mLARX,OACEzH,EAAAC,EAAAC,cAAA,OAAKwH,UAAU,OACb1H,EAAAC,EAAAC,cAACyH,EAAD,cAJU9G,mBCQE+G,QACU,cAA7BhB,OAAOiB,SAASC,UAEgB,UAA7BlB,OAAOiB,SAASC,UAEhBlB,OAAOiB,SAASC,SAASC,MACxB,2DCTLC,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAASC,SAASC,eAAe,SDkH5C,kBAAmBC,WACtBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GAClCA,EAAaC","file":"static/js/main.5e247a5c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ship.cd54a46c.svg\";","module.exports = __webpack_public_path__ + \"static/media/asteroid.3b97d2f1.svg\";","import React, {Component} from \"react\";\r\n\r\nclass Score extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            elapsed: 0,\r\n            start: null,\r\n            timerID: null\r\n        }\r\n    }\r\n\r\n    start = () => {\r\n        const timerID = setInterval(this.tick, 100)\r\n        this.setState({start: new Date, timerID: timerID})\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.start();\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearInterval(this.state.timerID)\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if( !this.state.timerID && !this.props.lost){\r\n            this.start();\r\n        }\r\n    }\r\n    \r\n\r\n    tick = () => {\r\n        const elapsed = new Date() - this.state.start;\r\n        if(this.props.lost){\r\n            clearInterval(this.state.timerID)\r\n            this.setState({timerID: null})\r\n        }\r\n        this.setState({elapsed: elapsed})\r\n    }\r\n\r\n    render(){\r\n    \r\n        return(\r\n            <h1 style={{zIndex: \"2\", position: \"absolute\", top: \"1rem\", fontFamily: '\"Press Start 2P\", cursive', left: \"1.5rem\", color: \"white\"}}>SCORE: {(Math.floor(this.state.elapsed/100) * 100).toFixed(0)}</h1>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Score;","import React from \"react\";\r\n\r\nconst LoseScreen = (props) => {\r\n    return(\r\n        <div onClick={props.onClick}>\r\n            <div style={\r\n                {backgroundColor: \"white\", color: \"black\", position: \"absolute\", \r\n                top:\"50%\", left:\"50%\", transform: \"translate(-50%, -50%)\", \r\n                width:\"15rem\", height:\"6rem\",  zIndex: \"25\", textAlign: \"center\",\r\n                borderRadius: \"5px\", fontFamily: '\"Press Start 2P\", cursive'}}>\r\n                <p>You lose.</p><p> Click anywhere to play another</p>    \r\n            </div>    \r\n            \r\n            <div style={{width: \"100vw\", height: \"100vh\", backgroundColor: \"black\", opacity: \".5\", position: \"absolute\", top:\"0\", left:\"0\"}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoseScreen","//updates keymap in state, will set values to true or false on keydown and keyup \r\nconst adjustKeyMap = (event, keyMapInput) =>{\r\n\tif(event.type === \"keydown\"){\r\n\t\tconst keyMap = {...keyMapInput}\r\n\t\tswitch(event.key){\r\n\t\tcase \"w\":\r\n\t\t\tkeyMap.w = true\r\n\t\t\tbreak\r\n\t\tcase \"s\":\r\n\t\t\tkeyMap.s = true\r\n\t\t\tbreak\r\n        \r\n\t\tcase \"a\":\r\n\t\t\tkeyMap.a = true\r\n\t\t\tbreak\r\n                \r\n\t\tcase \"d\":\r\n\t\t\tkeyMap.d = true\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t\tbreak\r\n\t\t}\r\n\t\treturn keyMap\r\n\r\n\t}else if(event.type === \"keyup\"){        \r\n\t\tconst keyMap = {...keyMapInput}\r\n\t\tswitch(event.key){\r\n\t\tcase \"w\":\r\n\t\t\tkeyMap.w = false\r\n\t\t\tbreak\r\n\r\n\t\tcase \"s\":\r\n\t\t\tkeyMap.s = false\r\n\t\t\tbreak\r\n        \r\n\t\tcase \"a\":\r\n\t\t\tkeyMap.a = false\r\n\t\t\tbreak\r\n                \r\n\t\tcase \"d\":\r\n\t\t\tkeyMap.d = false\r\n\t\t\tbreak\r\n\t\tdefault:\r\n\t\t}\r\n\r\n\t\treturn keyMap\r\n\t}\r\n}\r\nexport default adjustKeyMap","//pass \"{...this.state.keyMap}\"\r\n//will return angle that ship should face\r\nconst updateShipAngle = (keyMap) => {\r\n\tlet angle = 0\r\n\tif(keyMap.w){\r\n\t\tangle += 0\r\n\t\tif(keyMap.d){\r\n\t\t\tangle += 45\r\n\t\t}\r\n\t\tif(keyMap.a){\r\n\t\t\tangle += 315\r\n\t\t}\r\n\t\treturn angle\r\n\t}\r\n\tif(keyMap.a){\r\n\t\tangle += 270\r\n\t\tif(keyMap.s){\r\n\t\t\tangle -= 45\r\n\t\t}\r\n\t\tif(keyMap.w){\r\n\t\t\tangle -= 45\r\n\t\t}\r\n\t\treturn angle\r\n\t}\r\n\tif(keyMap.s){\r\n\t\tangle += 180\r\n\t\tif(keyMap.d){\r\n\t\t\tangle -= 45\r\n\t\t}\r\n\t\tif(keyMap.a){\r\n\t\t\tangle -= 45\r\n\t\t}\r\n\t\treturn angle\r\n\t}\r\n\tif(keyMap.d){\r\n\t\tangle += 90\r\n\t\tif(keyMap.w){\r\n\t\t\tangle += 45\r\n\t\t}\r\n\t\tif(keyMap.s){\r\n\t\t\tangle -= 45\r\n\t\t}\r\n\t\treturn angle\r\n\t}\r\n}\r\n\r\nexport default updateShipAngle","//draws the ship. Used as a utility function by other dmoveShip()\r\n\r\nconst drawShip = (ctx, state) => {\r\n\tconst shipPosition = state.shipPosition \r\n\tconst shipAngle = state.shipAngle\r\n\tconst shipIMG = state.shipIMG\r\n\tctx.save() \r\n \r\n\t// move the origin to shipposition   \r\n\tctx.translate(shipPosition.x, shipPosition.y) \r\n            \r\n\t// now move across and down half the \r\n\tctx.translate(25,25) \r\n            \r\n\t// rotate around this point\r\n\tctx.rotate(shipAngle * Math.PI/180) \r\n            \r\n\t// then draw the image back and up\r\n\tctx.drawImage(shipIMG, -25, -25) \r\n            \r\n\t// and restore the co-ordinate system to its default\r\n\t// top left origin with no rotation\r\n\tctx.restore()\r\n         \r\n}\r\n\r\nexport default drawShip","//uses ship Position to generate an asteroid to be thrown at that ship. dy and dx depend on the spawn position of the asteroid\r\n\r\n//(shipPosition (duh), canvas height, canvas width, asteroidImg)\r\nconst asteroidGenerator = (shipPosition, cHeight, cWidth, asteroidIMG) => {\r\n\r\n\tconst asteroid = {\r\n\t\tposition: {\r\n\t\t\tx: 0,\r\n\t\t\ty: 0\r\n\t\t},\r\n\t\tdirection: {\r\n\t\t\tdx: 0,\r\n\t\t\tdy: 0\r\n\t\t},\r\n\t\tincrementPosition: () => {\r\n\t\t\t//increments asteroid position for next redraw\r\n\t\t\tasteroid.position.x += asteroid.direction.dx\r\n\t\t\tasteroid.position.y += asteroid.direction.dy\r\n\t\t},\r\n\t\tinsideAsteroid: (sx, sy) => {\r\n\t\t\t//this function will check if the ships position is inside of the asteroid\r\n\t\t\t//uses distance formula from the radius to determine if ship is within radius of the asteroid \r\n\t\t\t//returns false if not inside asteroid\r\n            \r\n\t\t\t//because position is drawn from the top left hand corner of the svg, I survey the area around the center of the circle by adjusting \"position\" \r\n\t\t\t//of the asteroid to be centered\r\n\t\t\tconst hitboxPositionX = asteroid.position.x + (asteroid.asteroidIMG.width/2)\r\n\t\t\tconst hitboxPositionY = asteroid.position.y + (asteroid.asteroidIMG.height/2)\r\n            \r\n\t\t\tconst distance = Math.sqrt(Math.pow(sx -  hitboxPositionX, 2) + Math.pow(sy - hitboxPositionY, 2) )\r\n\r\n\t\t\t//50 is width of asteroid, the extra 5 is to account for being close to the asteroid\r\n\t\t\treturn 55 >= distance\r\n\t\t},\r\n\t\tasteroidIMG: asteroidIMG,\r\n\t\tnegateX: false,\r\n\t\tnegateY: false\r\n\t}\r\n\r\n\tconst walls = [\"top\", \"bottom\", \"left\", \"right\"]\r\n\r\n\tswitch(walls[Math.floor(Math.random()* 4)]){\r\n\tcase \"top\":\r\n\t\tasteroid.position.x = Math.random() * cWidth\r\n\t\tasteroid.position.y = -100\r\n\t\tbreak\r\n\tcase \"bottom\":\r\n\t\tasteroid.position.x = Math.random() * cWidth\r\n\t\tasteroid.position.y = cHeight\r\n\t\tbreak\r\n\tcase \"left\":\r\n\t\tasteroid.position.x = -100\r\n\t\tasteroid.position.y = Math.random() * cHeight\r\n\t\tbreak\r\n\tcase \"right\":\r\n\t\tasteroid.position.x = cWidth\r\n\t\tasteroid.position.y = Math.random() * cHeight\r\n\t\tbreak\r\n\tdefault:\r\n\t\treturn 0\r\n\t}\r\n\r\n    \r\n\t//angle from the horizontal + adding randomness \r\n\tconst angle = Math.atan(Math.abs((shipPosition.y - asteroid.position.y))/Math.abs((shipPosition.x - asteroid.position.x))) \r\n    + ((Math.random()*20)*((-1)^Math.round(Math.random()))/360 )\r\n    \r\n\t//minimum speed is 10 with up to 20\r\n\tconst speed = Math.ceil(Math.random()*15) + 10\r\n    \r\n\tasteroid.negateX = asteroid.position.x > shipPosition.x\r\n\tasteroid.negateY = asteroid.position.y > shipPosition.y    \r\n\r\n\r\n\tasteroid.direction.dx = Math.cos(angle) * speed \r\n\tasteroid.direction.dy = Math.sin(angle) * speed\r\n    \r\n    \r\n\tif(asteroid.negateX){\r\n\t\tasteroid.direction.dx = asteroid.direction.dx * -1\r\n\t}\r\n\r\n\tif(asteroid.negateY){\r\n\t\tasteroid.direction.dy = asteroid.direction.dy * -1\r\n\t}\r\n\r\n\treturn asteroid\r\n}\r\n\r\nexport default asteroidGenerator","//draws the Asteroid. Used as a utility function by other dmoveAsteroid()\r\n\r\n\r\nconst drawAsteroid = (ctx, asteroid) => {\r\n\tconst asteroidIMG = asteroid.asteroidIMG\r\n\tconst asteroidPosition = asteroid.position\r\n\tctx.drawImage(asteroidIMG, asteroidPosition.x, asteroidPosition.y)\r\n}\r\n\r\nexport default drawAsteroid","import React, { Component } from \"react\";\r\n\r\n//score\r\nimport Score from \"../Score/Score\"\r\n\r\n//loseScreen\r\nimport LoseScreen from \"../../presentational/loseScreen\"\r\n\r\n//ship\r\nimport ship from \"../../svgs/ship.svg\"\r\nimport adjustKeyMap from \"../../helpers/ship-related/adjustKeyMap\"\r\nimport updateShipAngle from \"../../helpers/ship-related/updateShipAngle\"\r\nimport drawShip from \"../../helpers/ship-related/drawShip\"\r\n\r\n//asteroid\r\nimport asteroid from \"../../svgs/asteroid.svg\"\r\nimport asteroidGenerator from \"../../helpers/asteroid-related/asteroidGenerator\"\r\nimport drawAsteroid from \"../../helpers/asteroid-related/drawAsteroid\";\r\n\r\n\r\nclass Canvas extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            backgroundColor: \"#000\",\r\n            shipPosition: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            shipHitBox: {\r\n                //this object represents the \"shipPosition\" + half the width of the img and half the height.\r\n                //the image is drawn from the left hand corner!\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            keyMap : {\r\n                w: false,\r\n                s: false,\r\n                a: false,\r\n                d: false\r\n            },\r\n            shipIMG : null,\r\n            shipLoaded: false,\r\n            shipAngle: 0,\r\n            asteroidIMG: null,\r\n            asteroidLoaded: false,\r\n            asteroidArray: [],\r\n            lost: false,\r\n            restart: false\r\n        }\r\n    }\r\n    \r\n    //updates the state to reflect movement by wsad and redraws the ship.\r\n    moveShip = () =>{\r\n        if(this.state.shipLoaded){\r\n            let prevState = {...this.state};\r\n            let currentPosition = {...prevState.shipPosition}\r\n            \r\n\r\n            if(this.state.keyMap.w){\r\n                currentPosition.y -= 7;\r\n            }\r\n\r\n            if(this.state.keyMap.s){\r\n                currentPosition.y += 7;\r\n            }\r\n\r\n            if(this.state.keyMap.a){\r\n                currentPosition.x -= 7;\r\n            }\r\n\r\n            if(this.state.keyMap.d){\r\n                currentPosition.x += 7;\r\n            }\r\n            this.setState({shipPosition: currentPosition})\r\n            drawShip(this.refs.canvas.getContext('2d'), this.state);\r\n            \r\n            const shipHitBox = {x: currentPosition.x + (this.state.shipIMG.width/2), y: currentPosition.y + (this.state.shipIMG.height/2)}\r\n            this.setState({shipHitBox: shipHitBox})\r\n            }\r\n    }\r\n\r\n    //draws asteroid and updates its position for next redraw\r\n    //checks if ship is within asteroid range\r\n    updateAsteroid = () => {\r\n        //moves every asteroid in the asteroid array\r\n        if(this.state.asteroidLoaded){\r\n            const ctx = this.refs.canvas.getContext('2d');\r\n            const asteroidArray = [...this.state.asteroidArray]\r\n            for(var i = 0; i < this.state.asteroidArray.length; i++){\r\n                drawAsteroid(ctx, this.state.asteroidArray[i])\r\n                if(asteroidArray[i].insideAsteroid(this.state.shipHitBox.x, this.state.shipHitBox.y)){\r\n                    this.setState({lost: true})\r\n                    clearInterval(this.state.intervalRedraw)    \r\n                } \r\n                asteroidArray[i].incrementPosition();\r\n                \r\n            }\r\n            this.setState({asteroidArray: asteroidArray});\r\n        }\r\n    }\r\n\r\n    \r\n    //filters out anything that exceeds the width of the canvas\r\n    //this portion does cleanup on the array, doesnt need to be as frequently checked\r\n    decrementAsteroidArray = () => {\r\n        const asteroidArray = [...this.state.asteroidArray]\r\n        const updatedAsteroidArray = asteroidArray.filter(asteroid => {\r\n            let remainInArray = asteroid.position.x < this.refs.canvas.width && asteroid.position.x > 0\r\n            return remainInArray;  \r\n        })\r\n        this.setState({asteroidArray: updatedAsteroidArray});\r\n    }\r\n    \r\n\r\n    //function called by setInterval, responsible for redraws of the canvas.\r\n    drawCanvas = () => {\r\n        const ctx = this.refs.canvas.getContext('2d');\r\n        \r\n        ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\r\n        \r\n        this.moveShip();\r\n        this.updateAsteroid();\r\n    }\r\n    \r\n    //adds new asteroid objects to asteroidArray \r\n    incrementAsteroidArray = () => {\r\n        if(this.state.asteroidLoaded){\r\n            const asteroid = asteroidGenerator(this.state.shipPosition, this.refs.canvas.height, this.refs.canvas.width, this.state.asteroidIMG);\r\n            const prevAsteroidArray = [...this.state.asteroidArray]\r\n            prevAsteroidArray.push(asteroid);    \r\n            this.setState({asteroidArray: prevAsteroidArray});\r\n            \r\n        }\r\n    }\r\n\r\n    loadAsteroid = () => {\r\n        var img = new Image(100,100);\r\n        img.onload = () => {\r\n            this.setState({asteroidLoaded: true, asteroidIMG: img})\r\n            \r\n            setInterval(this.incrementAsteroidArray, 600);\r\n        }\r\n        img.src = asteroid;\r\n    }\r\n\r\n    loadShip = () => {\r\n        var img = new Image(50,50);\r\n        img.onload = () => {\r\n            this.setState({shipIMG: img, shipLoaded: true})\r\n        }\r\n        img.src = ship;\r\n    }\r\n\r\n    start = () => {\r\n        this.setState({restart: false, lost: false, asteroidArray: []})\r\n        const canvas = this.refs.canvas;\r\n        canvas.height = window.innerHeight;\r\n        canvas.width = window.innerWidth;\r\n        this.setState({shipPosition: {x: this.refs.canvas.width/2, y: this.refs.canvas.height/2}})\r\n        \r\n        setInterval(this.decrementAsteroidArray, 5000);\r\n        const intervalRedraw = setInterval(this.drawCanvas, 25)\r\n        this.setState({intervalRedraw});\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        //remove listeners on loss\r\n        this.start();\r\n        this.loadShip();\r\n        this.loadAsteroid();    \r\n        window.addEventListener(\"keydown\", (e) => {\r\n            this.setState({keyMap: adjustKeyMap(e, this.state.keyMap)}, () => {\r\n                this.setState({shipAngle: updateShipAngle({...this.state.keyMap})})\r\n            })\r\n        })\r\n        window.addEventListener(\"keyup\", (e) => {\r\n            this.setState({keyMap: adjustKeyMap(e, this.state.keyMap)}, () => {\r\n                this.setState({shipAngle: updateShipAngle({...this.state.keyMap})})\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.state.restart){\r\n            this.start();\r\n        }\r\n    }\r\n    render(){\r\n        let loseScreen = null;\r\n        if(this.state.lost){\r\n            loseScreen = (<LoseScreen  onClick={() => this.setState({restart: true})}></LoseScreen>)\r\n        }\r\n        return(\r\n            <div>\r\n            <Score lost={this.state.lost}></Score>\r\n            <canvas ref=\"canvas\" style={{boxSizing: \"border-box\", backgroundColor: \"black\", padding: \"0px\", position: \"relative\"}}></canvas>\r\n            {loseScreen}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Canvas;","import React, { Component } from 'react';\r\nimport Canvas from \"./container/Canvas/Canvas\";\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Canvas></Canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n\twindow.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n\t\t// The URL constructor is available in all browsers that support SW.\r\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location)\r\n\t\tif (publicUrl.origin !== window.location.origin) {\r\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\r\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\r\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\twindow.addEventListener(\"load\", () => {\r\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n\t\t\tif (isLocalhost) {\r\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\r\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\r\n\r\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\r\n\t\t\t\t// service worker/PWA documentation.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\r\n\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Is not local host. Just register service worker\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n\tnavigator.serviceWorker\r\n\t\t.register(swUrl)\r\n\t\t.then(registration => {\r\n\t\t\tregistration.onupdatefound = () => {\r\n\t\t\t\tconst installingWorker = registration.installing\r\n\t\t\t\tinstallingWorker.onstatechange = () => {\r\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\r\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\r\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\r\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\r\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\r\n\t\t\t\t\t\t\tconsole.log(\"New content is available; please refresh.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onUpdate) {\r\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// At this point, everything has been precached.\r\n\t\t\t\t\t\t\t// It's the perfect time to display a\r\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\r\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\r\n\r\n\t\t\t\t\t\t\t// Execute callback\r\n\t\t\t\t\t\t\tif (config.onSuccess) {\r\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\r\n\t\t})\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n\t// Check if the service worker can be found. If it can't reload the page.\r\n\tfetch(swUrl)\r\n\t\t.then(response => {\r\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\r\n\t\t\tif (\r\n\t\t\t\tresponse.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n\t\t\t) {\r\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\r\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\t\t\tregistration.unregister().then(() => {\r\n\t\t\t\t\t\twindow.location.reload()\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\t// Service worker found. Proceed as normal.\r\n\t\t\t\tregisterValidSW(swUrl, config)\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch(() => {\r\n\t\t\tconsole.log(\r\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\r\n\t\t\t)\r\n\t\t})\r\n}\r\n\r\nexport function unregister() {\r\n\tif (\"serviceWorker\" in navigator) {\r\n\t\tnavigator.serviceWorker.ready.then(registration => {\r\n\t\t\tregistration.unregister()\r\n\t\t})\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"./index.css\"\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}