{"version":3,"sources":["svgs/ship.svg","svgs/asteroid.svg","container/Score/Score.js","presentational/loseScreen.js","helpers/ship-related/adjustKeyMap.js","helpers/ship-related/updateShipAngle.js","helpers/ship-related/drawShip.js","helpers/asteroid-related/asteroidGenerator.js","helpers/asteroid-related/drawAsteroid.js","container/Canvas/Canvas.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Score","_Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","start","timerID","setInterval","tick","setState","Date","componentDidMount","componentWillUnmount","clearInterval","state","elapsed","lost","_inherits","_createClass","key","value","React","createElement","style","zIndex","position","top","fontFamily","left","color","Math","floor","toFixed","Component","LoseScreen","onClick","backgroundColor","transform","width","height","textAlign","borderRadius","opacity","adjustKeyMap","event","keyMapInput","type","keyMap","_objectSpread","keyCode","w","s","a","d","updateShipAngle","angle","drawShip","ctx","shipPosition","shipAngle","shipIMG","save","translate","x","y","rotate","PI","drawImage","restore","asteroidGenerator","cHeight","cWidth","asteroidIMG","asteroid","direction","dx","dy","incrementPosition","insideAsteroid","sx","sy","hitboxPositionX","hitboxPositionY","sqrt","pow","negateX","negateY","random","atan","abs","round","speed","ceil","cos","sin","drawAsteroid","asteroidPosition","Canvas","moveShip","shipLoaded","prevState","currentPosition","refs","canvas","getContext","shipHitBox","updateAsteroid","asteroidLoaded","asteroidArray","_toConsumableArray","i","length","intervalRedraw","decrementAsteroidArray","updatedAsteroidArray","filter","drawCanvas","clearRect","incrementAsteroidArray","prevAsteroidArray","push","loadAsteroid","img","Image","onload","src","loadShip","ship","restart","window","innerHeight","innerWidth","_this2","addEventListener","e","_this3","loseScreen","ref","boxSizing","padding","App","apply","arguments","className","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a788bb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ship.b4ded905.svg\";","module.exports = __webpack_public_path__ + \"static/media/asteroid.85a31fe8.svg\";","import React, {Component} from \"react\";\n\nclass Score extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            elapsed: 0,\n            start: null,\n            timerID: null\n        }\n    }\n\n    start = () => {\n        const timerID = setInterval(this.tick, 100)\n        this.setState({start: new Date, timerID: timerID})\n    }\n\n    componentDidMount = () => {\n        this.start();\n    }\n\n    componentWillUnmount = () => {\n        clearInterval(this.state.timerID)\n    }\n\n    componentDidUpdate(){\n        if( !this.state.timerID && !this.props.lost){\n            this.start();\n        }\n    }\n    \n\n    tick = () => {\n        const elapsed = new Date() - this.state.start;\n        if(this.props.lost){\n            clearInterval(this.state.timerID)\n            this.setState({timerID: null})\n        }\n        this.setState({elapsed: elapsed})\n    }\n\n    render(){\n    \n        return(\n            <h1 style={{zIndex: \"2\", position: \"absolute\", top: \"1rem\", fontFamily: '\"Press Start 2P\", cursive', left: \"1.5rem\", color: \"white\"}}>SCORE: {(Math.floor(this.state.elapsed/100) * 100).toFixed(0)}</h1>\n        )\n    }\n}\n\n\nexport default Score;","import React from \"react\";\n\nconst LoseScreen = (props) => {\n    return(\n        <div onClick={props.onClick}>\n            <div style={\n                {backgroundColor: \"white\", color: \"black\", position: \"absolute\", \n                top:\"50%\", left:\"50%\", transform: \"translate(-50%, -50%)\", \n                width:\"15rem\", height:\"6rem\",  zIndex: \"25\", textAlign: \"center\",\n                borderRadius: \"5px\", fontFamily: '\"Press Start 2P\", cursive'}}>\n                <p>You lose.</p><p> Click anywhere to play another</p>    \n            </div>    \n            \n            <div style={{width: \"100vw\", height: \"100vh\", backgroundColor: \"black\", opacity: \".5\", position: \"absolute\", top:\"0\", left:\"0\"}}></div>\n        </div>\n    )\n}\n\nexport default LoseScreen","//updates keymap in state, will set values to true or false on keydown and keyup\nconst adjustKeyMap = (event, keyMapInput) => {\n  if (event.type === \"keydown\") {\n    const keyMap = { ...keyMapInput };\n    switch (event.keyCode) {\n      case 87:\n      case 38:\n        keyMap.w = true;\n        break;\n      case 83:\n      case 40:\n        keyMap.s = true;\n        break;\n\n      case 65:\n      case 37:\n        keyMap.a = true;\n        break;\n\n      case 68:\n      case 39:\n        keyMap.d = true;\n        break;\n      default:\n        break;\n    }\n    return keyMap;\n  } else if (event.type === \"keyup\") {\n    const keyMap = { ...keyMapInput };\n    switch (event.keyCode) {\n      case 87:\n      case 38:\n        keyMap.w = false;\n        break;\n\n      case 83:\n      case 40:\n        keyMap.s = false;\n        break;\n\n      case 65:\n      case 37:\n        keyMap.a = false;\n        break;\n\n      case 68:\n      case 39:\n        keyMap.d = false;\n        break;\n      default:\n    }\n\n    return keyMap;\n  }\n};\nexport default adjustKeyMap;\n","//pass \"{...this.state.keyMap}\"\n//will return angle that ship should face\nconst updateShipAngle = (keyMap) => {\n\tlet angle = 0\n\tif(keyMap.w){\n\t\tangle += 0\n\t\tif(keyMap.d){\n\t\t\tangle += 45\n\t\t}\n\t\tif(keyMap.a){\n\t\t\tangle += 315\n\t\t}\n\t\treturn angle\n\t}\n\tif(keyMap.a){\n\t\tangle += 270\n\t\tif(keyMap.s){\n\t\t\tangle -= 45\n\t\t}\n\t\tif(keyMap.w){\n\t\t\tangle -= 45\n\t\t}\n\t\treturn angle\n\t}\n\tif(keyMap.s){\n\t\tangle += 180\n\t\tif(keyMap.d){\n\t\t\tangle -= 45\n\t\t}\n\t\tif(keyMap.a){\n\t\t\tangle -= 45\n\t\t}\n\t\treturn angle\n\t}\n\tif(keyMap.d){\n\t\tangle += 90\n\t\tif(keyMap.w){\n\t\t\tangle += 45\n\t\t}\n\t\tif(keyMap.s){\n\t\t\tangle -= 45\n\t\t}\n\t\treturn angle\n\t}\n}\n\nexport default updateShipAngle","//draws the ship. Used as a utility function by other dmoveShip()\n\nconst drawShip = (ctx, state) => {\n\tconst shipPosition = state.shipPosition \n\tconst shipAngle = state.shipAngle\n\tconst shipIMG = state.shipIMG\n\tctx.save() \n \n\t// move the origin to shipposition   \n\tctx.translate(shipPosition.x, shipPosition.y) \n            \n\t// now move across and down half the \n\tctx.translate(25,25) \n            \n\t// rotate around this point\n\tctx.rotate(shipAngle * Math.PI/180) \n            \n\t// then draw the image back and up\n\tctx.drawImage(shipIMG, -25, -25) \n            \n\t// and restore the co-ordinate system to its default\n\t// top left origin with no rotation\n\tctx.restore()\n         \n}\n\nexport default drawShip","//uses ship Position to generate an asteroid to be thrown at that ship. dy and dx depend on the spawn position of the asteroid\n\n//(shipPosition (duh), canvas height, canvas width, asteroidImg)\nconst asteroidGenerator = (shipPosition, cHeight, cWidth, asteroidIMG) => {\n\n\tconst asteroid = {\n\t\tposition: {\n\t\t\tx: 0,\n\t\t\ty: 0\n\t\t},\n\t\tdirection: {\n\t\t\tdx: 0,\n\t\t\tdy: 0\n\t\t},\n\t\tincrementPosition: () => {\n\t\t\t//increments asteroid position for next redraw\n\t\t\tasteroid.position.x += asteroid.direction.dx\n\t\t\tasteroid.position.y += asteroid.direction.dy\n\t\t},\n\t\tinsideAsteroid: (sx, sy) => {\n\t\t\t//this function will check if the ships position is inside of the asteroid\n\t\t\t//uses distance formula from the radius to determine if ship is within radius of the asteroid \n\t\t\t//returns false if not inside asteroid\n            \n\t\t\t//because position is drawn from the top left hand corner of the svg, I survey the area around the center of the circle by adjusting \"position\" \n\t\t\t//of the asteroid to be centered\n\t\t\tconst hitboxPositionX = asteroid.position.x + (asteroid.asteroidIMG.width/2)\n\t\t\tconst hitboxPositionY = asteroid.position.y + (asteroid.asteroidIMG.height/2)\n            \n\t\t\tconst distance = Math.sqrt(Math.pow(sx -  hitboxPositionX, 2) + Math.pow(sy - hitboxPositionY, 2) )\n\n\t\t\t//50 is width of asteroid, the extra 5 is to account for being close to the asteroid\n\t\t\treturn 55 >= distance\n\t\t},\n\t\tasteroidIMG: asteroidIMG,\n\t\tnegateX: false,\n\t\tnegateY: false\n\t}\n\n\tconst walls = [\"top\", \"bottom\", \"left\", \"right\"]\n\n\tswitch(walls[Math.floor(Math.random()* 4)]){\n\tcase \"top\":\n\t\tasteroid.position.x = Math.random() * cWidth\n\t\tasteroid.position.y = -100\n\t\tbreak\n\tcase \"bottom\":\n\t\tasteroid.position.x = Math.random() * cWidth\n\t\tasteroid.position.y = cHeight\n\t\tbreak\n\tcase \"left\":\n\t\tasteroid.position.x = -100\n\t\tasteroid.position.y = Math.random() * cHeight\n\t\tbreak\n\tcase \"right\":\n\t\tasteroid.position.x = cWidth\n\t\tasteroid.position.y = Math.random() * cHeight\n\t\tbreak\n\tdefault:\n\t\treturn 0\n\t}\n\n    \n\t//angle from the horizontal + adding randomness \n\tconst angle = Math.atan(Math.abs((shipPosition.y - asteroid.position.y))/Math.abs((shipPosition.x - asteroid.position.x))) \n    + ((Math.random()*20)*((-1)^Math.round(Math.random()))/360 )\n    \n\t//minimum speed is 10 with up to 20\n\tconst speed = Math.ceil(Math.random()*15) + 10\n    \n\tasteroid.negateX = asteroid.position.x > shipPosition.x\n\tasteroid.negateY = asteroid.position.y > shipPosition.y    \n\n\n\tasteroid.direction.dx = Math.cos(angle) * speed \n\tasteroid.direction.dy = Math.sin(angle) * speed\n    \n    \n\tif(asteroid.negateX){\n\t\tasteroid.direction.dx = asteroid.direction.dx * -1\n\t}\n\n\tif(asteroid.negateY){\n\t\tasteroid.direction.dy = asteroid.direction.dy * -1\n\t}\n\n\treturn asteroid\n}\n\nexport default asteroidGenerator","//draws the Asteroid. Used as a utility function by other dmoveAsteroid()\n\n\nconst drawAsteroid = (ctx, asteroid) => {\n\tconst asteroidIMG = asteroid.asteroidIMG\n\tconst asteroidPosition = asteroid.position\n\tctx.drawImage(asteroidIMG, asteroidPosition.x, asteroidPosition.y)\n}\n\nexport default drawAsteroid","import React, { Component } from \"react\";\n\n//score\nimport Score from \"../Score/Score\"\n\n//loseScreen\nimport LoseScreen from \"../../presentational/loseScreen\"\n\n//ship\nimport ship from \"../../svgs/ship.svg\"\nimport adjustKeyMap from \"../../helpers/ship-related/adjustKeyMap\"\nimport updateShipAngle from \"../../helpers/ship-related/updateShipAngle\"\nimport drawShip from \"../../helpers/ship-related/drawShip\"\n\n//asteroid\nimport asteroid from \"../../svgs/asteroid.svg\"\nimport asteroidGenerator from \"../../helpers/asteroid-related/asteroidGenerator\"\nimport drawAsteroid from \"../../helpers/asteroid-related/drawAsteroid\";\n\n\nclass Canvas extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            backgroundColor: \"#000\",\n            shipPosition: {\n                x: 0,\n                y: 0\n            },\n            shipHitBox: {\n                //this object represents the \"shipPosition\" + half the width of the img and half the height.\n                //the image is drawn from the left hand corner!\n                x: 0,\n                y: 0\n            },\n            keyMap : {\n                w: false,\n                s: false,\n                a: false,\n                d: false\n            },\n            shipIMG : null,\n            shipLoaded: false,\n            shipAngle: 0,\n            asteroidIMG: null,\n            asteroidLoaded: false,\n            asteroidArray: [],\n            lost: false,\n            restart: false\n        }\n    }\n    \n    //updates the state to reflect movement by wsad and redraws the ship.\n    moveShip = () =>{\n        if(this.state.shipLoaded){\n            let prevState = {...this.state};\n            let currentPosition = {...prevState.shipPosition}\n            \n\n            if(this.state.keyMap.w){\n                currentPosition.y -= 7;\n            }\n\n            if(this.state.keyMap.s){\n                currentPosition.y += 7;\n            }\n\n            if(this.state.keyMap.a){\n                currentPosition.x -= 7;\n            }\n\n            if(this.state.keyMap.d){\n                currentPosition.x += 7;\n            }\n            this.setState({shipPosition: currentPosition})\n            drawShip(this.refs.canvas.getContext('2d'), this.state);\n            \n            const shipHitBox = {x: currentPosition.x + (this.state.shipIMG.width/2), y: currentPosition.y + (this.state.shipIMG.height/2)}\n            this.setState({shipHitBox: shipHitBox})\n            }\n    }\n\n    //draws asteroid and updates its position for next redraw\n    //checks if ship is within asteroid range\n    updateAsteroid = () => {\n        //moves every asteroid in the asteroid array\n        if(this.state.asteroidLoaded){\n            const ctx = this.refs.canvas.getContext('2d');\n            const asteroidArray = [...this.state.asteroidArray]\n            for(var i = 0; i < this.state.asteroidArray.length; i++){\n                drawAsteroid(ctx, this.state.asteroidArray[i])\n                if(asteroidArray[i].insideAsteroid(this.state.shipHitBox.x, this.state.shipHitBox.y)){\n                    this.setState({lost: true})\n                    clearInterval(this.state.intervalRedraw)    \n                } \n                asteroidArray[i].incrementPosition();\n                \n            }\n            this.setState({asteroidArray: asteroidArray});\n        }\n    }\n\n    \n    //filters out anything that exceeds the width of the canvas\n    //this portion does cleanup on the array, doesnt need to be as frequently checked\n    decrementAsteroidArray = () => {\n        const asteroidArray = [...this.state.asteroidArray]\n        const updatedAsteroidArray = asteroidArray.filter(asteroid => {\n            let remainInArray = asteroid.position.x < this.refs.canvas.width && asteroid.position.x > 0\n            return remainInArray;  \n        })\n        this.setState({asteroidArray: updatedAsteroidArray});\n    }\n    \n\n    //function called by setInterval, responsible for redraws of the canvas.\n    drawCanvas = () => {\n        const ctx = this.refs.canvas.getContext('2d');\n        \n        ctx.clearRect(0, 0, this.refs.canvas.width, this.refs.canvas.height);\n        \n        this.moveShip();\n        this.updateAsteroid();\n    }\n    \n    //adds new asteroid objects to asteroidArray \n    incrementAsteroidArray = () => {\n        if(this.state.asteroidLoaded){\n            const asteroid = asteroidGenerator(this.state.shipPosition, this.refs.canvas.height, this.refs.canvas.width, this.state.asteroidIMG);\n            const prevAsteroidArray = [...this.state.asteroidArray]\n            prevAsteroidArray.push(asteroid);    \n            this.setState({asteroidArray: prevAsteroidArray});\n            \n        }\n    }\n\n    loadAsteroid = () => {\n        var img = new Image(100,100);\n        img.onload = () => {\n            this.setState({asteroidLoaded: true, asteroidIMG: img})\n            \n            setInterval(this.incrementAsteroidArray, 600);\n        }\n        img.src = asteroid;\n    }\n\n    loadShip = () => {\n        var img = new Image(50,50);\n        img.onload = () => {\n            this.setState({shipIMG: img, shipLoaded: true})\n        }\n        img.src = ship;\n    }\n\n    start = () => {\n        this.setState({restart: false, lost: false, asteroidArray: []})\n        const canvas = this.refs.canvas;\n        canvas.height = window.innerHeight;\n        canvas.width = window.innerWidth;\n        this.setState({shipPosition: {x: this.refs.canvas.width/2, y: this.refs.canvas.height/2}})\n        \n        setInterval(this.decrementAsteroidArray, 5000);\n        const intervalRedraw = setInterval(this.drawCanvas, 25)\n        this.setState({intervalRedraw});\n        \n    }\n\n    componentDidMount(){\n        //remove listeners on loss\n        this.start();\n        this.loadShip();\n        this.loadAsteroid();    \n        window.addEventListener(\"keydown\", (e) => {\n            this.setState({keyMap: adjustKeyMap(e, this.state.keyMap)}, () => {\n                this.setState({shipAngle: updateShipAngle({...this.state.keyMap})})\n            })\n        })\n        window.addEventListener(\"keyup\", (e) => {\n            this.setState({keyMap: adjustKeyMap(e, this.state.keyMap)}, () => {\n                this.setState({shipAngle: updateShipAngle({...this.state.keyMap})})\n            })\n        })\n    }\n\n    componentDidUpdate(){\n        if(this.state.restart){\n            this.start();\n        }\n    }\n    render(){\n        let loseScreen = null;\n        if(this.state.lost){\n            loseScreen = (<LoseScreen  onClick={() => this.setState({restart: true})}></LoseScreen>)\n        }\n        return(\n            <div>\n            <Score lost={this.state.lost}></Score>\n            <canvas ref=\"canvas\" style={{boxSizing: \"border-box\", backgroundColor: \"black\", padding: \"0px\", position: \"relative\"}}></canvas>\n            {loseScreen}\n            </div>\n        )\n    }\n}\n\n\nexport default Canvas;","import React, { Component } from 'react';\nimport Canvas from \"./container/Canvas/Canvas\";\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Canvas></Canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n    \t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not local host. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the old content will have been purged and\n\t\t\t\t\t\t\t// the fresh content will have been added to the cache.\n\t\t\t\t\t\t\t// It's the perfect time to display a \"New content is\n\t\t\t\t\t\t\t// available; please refresh.\" message in your web app.\n\t\t\t\t\t\t\tconsole.log(\"New content is available; please refresh.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}